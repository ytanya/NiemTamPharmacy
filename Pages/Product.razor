@using BlazorStore.Models
@using BlazorStore.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Identity
@using BlazorStore.Services
@using Microsoft.AspNetCore.Http;
@using System.Threading;
@inject IHttpContextAccessor _httpContextAccessor
@inject ApplicationDbContext _context
@inject AllItemStateModel AllItemStateModel
@inject IImageService _imageService
@inject IJSRuntime JSRuntime
@inject SignInManager<CustomUser> _signInManager
@inject UserManager<CustomUser> _userManager
@inject NavigationManager NavigationManager
@inject IUserDetector _userDetector
@inject ICanUserComment _canUserComment

@page "/product/{slug}"

@if (AllItem is null || MoreItem is null || CartItem is null || CurrentItem is null)
{
    <!-- Preloader -->
    <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- End Preloader -->
}
else
{
    <!-- Header -->
    <header class="header shop">

        <!-- Topbar -->
        <div class="topbar">
            <div class="container mt-0">
                <div class="row">
                    <div class="col-lg-5 col-md-12 col-12">
                        <!-- Top Left -->
                        <div class="top-left">
                            <ul class="list-main">
                                <li><i class="ti-headphone-alt"></i> (+84) 905 666 770</li>
                                <li><i class="ti-email"></i> info@tienphong.it</li>
                                
                            </ul>
                        </div>
                        <!--/ End Top Left -->
                    </div>
                    <div class="col-lg-7 col-md-12 col-12">
                        <!-- Top Right -->
                        <div class="right-content">
                            <ul class="list-main">
                                <li><i class="ti-location-pin"></i> Đại Sơn-Đô Lương-Nghệ An</li>

                                <LoginDisplay />
                            </ul>
                        </div>
                        <!-- End Top Right -->
                    </div>
                </div>
            </div>
        </div>


        <div class="middle-inner">
            <div class="container">
                <div class="row">
                    <div class="col-lg-2 col-md-2 col-12">
                        <!-- Logo -->
                        <div class="logo">
                            <a href="/"><img src="images/logo.png" style="width:90px;height:81px" alt="logo"></a>
                        </div>
                        <!--/ End Logo -->
                        <!-- Search Form -->
                        <div class="search-top @searchActive">
                            <div class="top-search"><a @onclick="(() => OpenSearch())"><i class="ti-search"></i></a></div>
                            <!-- Search Form -->
                            <div class="search-top @searchActive">
                                <EditForm Model="searchProduct" OnValidSubmit="Search" class="search-form">
                                    <input type="text" placeholder="Search here..." @bind="searchProduct.Search">
                                    <button value="search" type="submit"><i class="ti-search"></i></button>
                                </EditForm>
                            </div>
                            <!--/ End Search Form -->
                        </div>
                        <!--/ End Search Form -->
                        <div class="mobile-nav"></div>
                    </div>
                    <div class="col-lg-8 col-md-7 col-12">
                        <div class="search-bar-top">
                            <div class="search-bar">
                                <EditForm Model="searchProduct" OnValidSubmit="Search">
                                    <input placeholder="Search Products Here....." @bind="searchProduct.Search">
                                    <button type="submit" class="btnn"><i class="ti-search"></i></button>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-3 col-12">
                        <div class="right-bar">
                            <!-- Search Form -->
                            <div class="sinlge-bar">
                                <a href="/wishlist" class="single-icon"><i class="fa fa-heart-o" aria-hidden="true"></i></a>
                            </div>
                            @if (_httpContextAccessor.HttpContext.User.IsInRole("NormalUser"))
                            {
                                <div class="sinlge-bar">
                                    <a target="_parent" href="/Identity/Account/Manage" class="single-icon"><i class="fa fa-user-circle-o" aria-hidden="true"></i></a>
                                </div>
                            }




                            <div class="sinlge-bar shopping">
                                <a href="#" class="single-icon">
                                    <i class="ti-bag"></i>
                                    <span class="total-count">
                                        @if (CartItem is not null)
                                        {
                                            totalItem = 0;
                                            foreach (var item in CartItem)
                                            {
                                                totalItem += item.Quantity;
                                            }
                                            @totalItem
                                        }
                                    </span>
                                </a>
                                <!-- Shopping Item -->
                                <div class="shopping-item">
                                    <div class="dropdown-cart-header">
                                        @if (CartItem is not null)
                                        {
                                            <span>@totalItem Items</span>
                                        }

                                        <a href="/cart">View Cart</a>
                                    </div>
                                    <ul class="shopping-list">
                                        @if (CartItem is not null)
                                        {
                                            float Item_total_price = 0;
                                            foreach (var item in CartItem)
                                            {
                                                Item_total_price += float.Parse(item.Price) * (float)item.Quantity;
                                                var itemid = item.Id;
                                                <li>
                                                    <a style="cursor: pointer;" @onclick="(() => RemoveFromCart(itemid))" class="remove" title="Remove this item"><i class="fa fa-remove"></i></a>
                                                    <a class="cart-img" target="_parent" href="/product/@item.Slug"><img src="@_imageService.DecodeFile(item.ImageData, item.ContentType)" style="width:70px;height:70px;" alt="#"></a>
                                                    <h4><a target="_parent" href="/product/@item.Slug">@item.Name</a></h4>
                                                    <p class="quantity">@(item.Quantity)x - <span class="amount">$@((Convert.ToDecimal(item.Price) * Convert.ToDecimal(item.Quantity)).ToString("0.##"))</span></p>
                                                </li>
                                            }


                                            total = Item_total_price;
                                        }


                                    </ul>
                                    <div class="bottom">
                                        <div class="total">
                                            <span>Total</span>
                                            <span class="total-amount">$@total.ToString("0.##")</span>
                                        </div>
                                        <a href="/cart" class="btn animate">Checkout</a>
                                    </div>
                                </div>
                                <!--/ End Shopping Item -->
                            </div>




                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header Inner -->
        <div class="header-inner">
            <div class="container">
                <div class="cat-nav-head">
                    <div class="row">
                        <div class="col-lg-3">

                        </div>
                        <div class="col-lg-9 col-12">
                            <div class="menu-area">
                                <!-- Main Menu -->
                                <nav class="navbar navbar-expand-lg">
                                    <div class="navbar-collapse">
                                        <div class="nav-inner">
                                            <ul class="nav main-menu menu navbar-nav">
                                                <li class="active"><a href="/">Home</a></li>
                                                <li></li>
                                                <li>
                                                    <a style="cursor:pointer;"><i class="fa fa-bars" aria-hidden="true"></i> Category</a>
                                                    <ul class="dropdown">
                                                        @if (ListCategory is not null)
                                                        {
                                                            foreach (var item in ListCategory)
                                                            {
                                                                <li><a target="_parent" href="/category/@item.Slug">@item.Name</a></li>
                                                            }
                                                        }
                                                        <li><a target="_parent" href="/all">All Item</a></li>
                                                    </ul>
                                                </li>
                                                <li><a href="/TrackOrders">Track Order</a></li>
                                                <li>
                                                    <a style="cursor:pointer;">Shop<i class="ti-angle-down"></i></a>
                                                    <ul class="dropdown">
                                                        <li><a href="/cart">Cart</a></li>
                                                        <li><a href="/checkout">Checkout</a></li>
                                                        <li><a href="/wishlist">Wishlist</a></li>
                                                        <li><a href="/about">About Us</a></li>
                                                        <li><a href="/blog">Our Blog</a></li>
                                                    </ul>
                                                </li>
                                                <li><a href="/contact">Contact Us</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </nav>
                                <!--/ End Main Menu -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--/ End Header Inner -->
    </header>
    <!--/ End Header -->
    <!-- End Topbar -->
    <!-- Breadcrumbs -->
    <div class="breadcrumbs">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="bread-inner">
                        <ul class="bread-list">
                            <li><a href="/">Home<i class="ti-arrow-right"></i></a></li>
                            <li class="active"><a>Product</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
    <!-- Product section-->
    <section class="py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="row gx-4 gx-lg-5 align-items-center mb-4">
                <div class="col-md-6"><img class="card-img-top mb-5 mb-md-0" src="@_imageService.DecodeFile(CurrentItem.ImageData, CurrentItem.ContentType)" alt="..." /></div>
                <div class="col-md-6">
                    <div class="row mb-5">
                        <div class="wrapper" style="top:-5%;left:-5%;width:100%;transform:none;">
                            <div class="rating-holder">
                                <div class="c-rating c-rating--big" data-rating-value="@CurrentItem.RateValue">
                                    <a disabled>1</a>
                                    <a disabled>2</a>
                                    <a disabled>3</a>
                                    <a disabled>4</a>
                                    <a disabled>5</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="font-size:20px;" class="mb-1">@CurrentItem.Category.Name</div>
                    <h1 class="display-5 fw-bolder mb-3">@CurrentItem.Name</h1>
                    <div class="fs-5 mb-3">
                        @if (CurrentItem.ItemSaleOffId != ItemSaleOffId)
                        {
                            <span style="font-size:35px;" class="text-decoration-line-through old">$@CurrentItem.Price</span>
                            <span style="font-size:35px;">$@CurrentItem.ListPrice(_context, CurrentItem.Price, CurrentItem.ItemSaleOffId)</span>
                        }
                        else
                        {
                            <span style="font-size:35px;">$@CurrentItem.Price</span>
                        }

                    </div>
                    <p class="lead mb-2">@CurrentItem.Description</p>
                    <div class="d-flex text-center">
                        <button @onclick="(() => MinusOne())" class="btn btn-outline-dark flex-shrink-0" style="max-width: 3rem;padding-right:46px;" type="button">
                            <span class="iconify" data-icon="akar-icons:minus" data-inline="true"></span>
                        </button>
                        <input class="form-control text-center me-3" id="quantity-product" type="number" readonly value="@quantity" style="max-width: 7rem" />
                        <button @onclick="(() => PlusOne())" class="btn btn-outline-dark flex-shrink-0 text-center" style="max-width: 3rem;padding-right:46px;" type="button">
                            <span class="iconify" data-icon="fluent:add-20-filled" data-inline="true"></span>
                        </button>
                    </div>
                    <br />
                    <div class="d-flex">
                        <button class="btn btn-outline-dark flex-shrink-0 text-center" @onclick="(() => AddToCart())" type="button">
                            <i class="bi-cart-fill me-1"></i>
                            Add to cart
                        </button>
                    </div>
                </div>
            </div>
            <hr />
            <div class="tab-content mb-60">
                <div class="tab-pane active" role="tabpanel" id="tab_01">
                    <p>@CurrentItem.Description</p>
                    @if (CurrentItem.Content is not null)
                    {
                        <p>@((MarkupString)CurrentItem.Content)</p>
                    }
                </div>
            </div>
            @if (CanUserComment)
            {
                <section class="blog-single section pt-0 pb-0">
                    <div class="blog-single-main">
                        <div class="row">
                            <div class="col-12">
                                <hr />
                                <div class="reply">
                                    <div class="reply-head">
                                        <h2 class="reply-title">ADD YOUR REVIEW</h2>
                                        <!-- Comment Form -->
                                        <EditForm class="form" Model="ProductCommentToDataBase" OnValidSubmit="AddComment">

                                            <div class="rating-holder" style="margin-left:0;padding-left:0;">
                                                <div class="c-rating c-rating--big" data-rating-value="@RateValue">
                                                    <a @onclick="SetRateValue1">1</a>
                                                    <a @onclick="SetRateValue2">2</a>
                                                    <a @onclick="SetRateValue3">3</a>
                                                    <a @onclick="SetRateValue4">4</a>
                                                    <a @onclick="SetRateValue5">5</a>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-12">
                                                    <div class="form-group">
                                                        <label class="mb-2">Your Review<span>*</span></label>
                                                        <textarea rows="3" @bind="ProductCommentToDataBase.Content" placeholder="How's our product...?"></textarea>
                                                    </div>
                                                </div>
                                                <div class="col-12">
                                                    <div class="form-group button">
                                                        <button type="submit" class="btn btn-secondary text-white">Submit Review</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </EditForm>
                                        <!-- End Comment Form -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

            }

            <section class="blog-single section  pt-0 pb-0">
                <div class="container">
                    <div class="row">
                        <div class="col-12 pl-0">
                            <div class="blog-single-main">
                                <div class="row">
                                    <div class="col-12">

                                        <div class="comments">
                                            <h3 class="comment-title">Comments (@CurrentItem.Comments.Count)</h3>
                                            @if (CurrentItem.Comments.Count != 0)
                                            {
                                                @foreach (var item in CurrentItem.Comments.OrderByDescending(i => i.Date))
                                                {
                                                    var user = _context.Users.FirstOrDefault(c => c.Id == item.CustomUserId);
                                                    <!-- Single Comment -->
                                                    <div class="single-comment">
                                                        <img src="@_imageService.DecodeFileAvatar(user.ImageData, user.ContentType)" alt="#">
                                                        <div class="content">
                                                            <h4>@user.FullName <span>@item.Date</span></h4>
                                                            <p>@item.Content</p>
                                                        </div>
                                                    </div>
                                                    <!-- End Single Comment -->
                                                }

                                            }



                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </section>
            <!--/ End Blog Single -->

        </div>
</section>

    


    <!-- Start Most Popular -->
    <div class="product-area most-popular section">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="section-title">
                        <h2>Product You May Like</h2>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="owl-carousel popular-slider">
                        @if (MoreItem is not null)
                        {
                            foreach (var item in MoreItem)
                            {
                                var itemId = item.Id;
                                <!-- Start Single Product -->
                                <div class="single-product">
                                    <div class="product-img">
                                        <a target="_parent" href="product/@item.Slug">
                                            <img class="default-img" src="@_imageService.DecodeFile(item.ImageData, item.ContentType)" alt="#">
                                            <img class="hover-img" src="@_imageService.DecodeFile(item.ImageData, item.ContentType)" alt="#">
                                            @if (item.ItemSaleOffId != ItemSaleOffId)
                                            {
                                                <span class="price-dec">@item.ItemSaleOff.Name</span>
                                            }
                                            @if (item.ItemStatusId != ItemStatusId)
                                            {
                                                <span class="out-of-stock">@(item.ItemSaleOff.Name)</span>
                                            }

                                        </a>
                                        <div class="button-head">
                                            <div class="product-action">
                                                <a data-toggle="modal" data-target="#exampleModal2-@item.Id" title="Quick View"><i class=" ti-eye"></i><span>Quick Shop</span></a>
                                                <a title="Wishlist" @onclick="(() => AddToWishList(itemId))"><i class=" ti-heart "></i><span>Add to Wishlist</span></a>
                                            </div>
                                            <div class="product-action-2">
                                                <a title="Add to cart" @onclick="(() => AddToCartMoreItem(itemId))">Add to cart</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="product-content">
                                        <h3><a target="_parent" href="product/@item.Slug">@item.Name</a></h3>
                                        <div class="product-price">
                                            @if (item.ItemSaleOffId != ItemSaleOffId)
                                            {
                                                <span class="old">$@item.Price</span>
                                                <span>$@item.ListPrice(_context, item.Price, item.ItemSaleOffId)</span>
                                            }
                                            else
                                            {
                                                <span>$@item.Price</span>
                                            }

                                        </div>
                                    </div>
                                </div>
                                <!-- End Single Product -->




                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Most Popular Area -->



    @if (MoreItem is not null)
    {
        foreach (var item in MoreItem)
        {
            var itemId = item.Id;
            <!-- Modal -->
            <div class="modal fade" id="exampleModal2-@item.Id" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span class="ti-close" aria-hidden="true"></span></button>
                        </div>
                        <div class="modal-body">
                            <div class="row" style="margin-left:0px;margin-right:0px;">
                                <div class="col"></div>
                                <div class="col-md-6 ">
                                    <h4 style="margin-top:100px;font-size:14px; font-weight:500; color:#F7941D; display:block; margin-bottom:5px;">@item.Category.Name</h4>
                                    <h3 style="font-size:30px;color:#333;">
                                        @item.Name
                                    </h3>
                                    <p style="display:block; margin-top:20px; color:#888; font-size:14px; font-weight:400;">@item.Description</p>
                                    <div class="button" style="margin-top:30px;">
                                        <a @onclick="(() => AddToCartMoreItem(itemId))" class="btn" style="color:#fff;">Buy Now!</a>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center ">
                                    <a target="_parent" href="product/@item.Slug"><img style="width:50%;height:auto;margin-top:100px;" src="@_imageService.DecodeFile(item.ImageData, item.ContentType)" alt="#"></a>
                                </div>
                                <div class="col"></div>
                            </div>
                            <br><br>
                        </div>


                    </div>
                </div>
            </div>
            <!-- Modal end -->
        }
    }



    <BlogPostArea></BlogPostArea>

}



@code{
    [Parameter]
    public string slug { get; set; }


    public List<Models.Item> AllItem;
    public List<Models.Item> MoreItem;
    public Models.Item CurrentItem;

    public int ItemSaleOffId;
    public int ItemStatusId;
    public int quantity = 1;

    public int totalItem;
    [Parameter]
    public List<Models.Cart> CartItem { get; set; }
    public Models.SearchProductModel searchProduct = new();
    public float total;
    public Models.CustomUser CustomUser;
    public string IpAddress;
    public string connectionId;
    public string searchActive;
    public double RateValue;
    public List<Models.Category> ListCategory;
    public Models.Comment ProductCommentToDataBase = new();
    public bool CanUserComment;
    protected override async Task OnInitializedAsync()
    {

        IpAddress = _userDetector.GetUserIpAdress();
        connectionId = _userDetector.GetUserConnectionId();
        if (!_signInManager.IsSignedIn(_httpContextAccessor.HttpContext.User))
        {
            var user = _context.Users.FirstOrDefault(u => u.ConnectionId == connectionId);
            if (user != null && (await _userManager.IsInRoleAsync(user, "TemporaryUser")))
            {
                var result = await _signInManager.PasswordSignInAsync(user.Email, "Abc123!", true, lockoutOnFailure: false);
            }
            else
            {
                await _userDetector.CreateTemporaryUserAsync();
                var tempUser = _context.Users.FirstOrDefault(u => u.ConnectionId == connectionId);
                if (tempUser != null && (await _userManager.IsInRoleAsync(tempUser, "TemporaryUser")))
                {
                    var result = await _signInManager.PasswordSignInAsync(tempUser.Email, "Abc123!", true, lockoutOnFailure: false);
                }
            }
        }
        else
        {
            var user = _context.Users.FirstOrDefault(u => u.UserName == _httpContextAccessor.HttpContext.User.Identity.Name);

            if (user != null)
            {
                if (user.ConnectionId is null || user.ConnectionId != connectionId)
                {
                    user.ConnectionId = connectionId;
                    user.IpAdress = IpAddress;
                    _context.Update(user);
                    _context.SaveChanges();
                }
            }
            else
            {
                new Thread(async () =>
                {
                    await _signInManager.SignOutAsync();
                }).Start();
                NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
            }
        }


        ItemSaleOffId = _context.ItemSaleOff.FirstOrDefault(i => i.Name == "None").Id;
        ItemStatusId = _context.ItemStatus.FirstOrDefault(i => i.Name == "Normal").Id;
        CurrentItem = new Models.Item();
        CurrentItem = _context.Item.Include(i => i.Category).Include(i => i.Attachments).Include(i => i.Comments).Include(i => i.CustomUsers).FirstOrDefault(i => i.Slug == slug);

        CurrentItem.ViewCount += 1;
        _context.Update(CurrentItem);
        await _context.SaveChangesAsync();



        AllItem = await _context.Item.Include(i => i.Attachments)
            .Include(i => i.Rates)
            .Include(i => i.ItemStatus)
            .Include(i => i.ItemSaleOff)
            .Include(i => i.Category).ToListAsync();

        MoreItem = AllItem.OrderBy(a => Guid.NewGuid()).Take(4).ToList();
        ListCategory = _context.Category.ToList();
        RateValue = 5.0;
        CanUserComment = await _canUserComment.IsUserInItemAsync(_userManager.GetUserId(_httpContextAccessor.HttpContext.User), CurrentItem.Id);
        GetCart();

    }

    public void Search()
    {
        NavigationManager.NavigateTo($"/search/{searchProduct.Search}");
    }

    public async Task AddToCart()
    {
        var number_of_some_item = _context.Cart
            .Where(i => i.CustomUserId == _userManager.GetUserId(_httpContextAccessor.HttpContext.User) && !i.IsSold && i.ItemId == CurrentItem.Id)
            .Include(i => i.Category)
            .Include(i => i.CustomUser)
            .ToList().Count;
        if (number_of_some_item == 0)
        {
            if (quantity > 0)
            {
                Models.Cart newCart = new Models.Cart
                {
                    Name = CurrentItem.Name,
                    ItemId = CurrentItem.Id,
                    Quantity = quantity,
                    Price = CurrentItem.ListPrice(_context, CurrentItem.Price, CurrentItem.ItemSaleOffId),
                    CategoryId = CurrentItem.CategoryId,
                    CustomUserId = _userManager.GetUserId(_httpContextAccessor.HttpContext.User),
                    ImageData = CurrentItem.ImageData,
                    ContentType = CurrentItem.ContentType,
                    Slug = CurrentItem.Slug
                };
                _context.Add(newCart);
                _context.SaveChanges();
            }
            else
            {
                Models.Cart newCart = new Models.Cart
                {
                    Name = CurrentItem.Name,
                    ItemId = CurrentItem.Id,
                    Quantity = 1,
                    Price = CurrentItem.ListPrice(_context, CurrentItem.Price, CurrentItem.ItemSaleOffId),
                    CategoryId = CurrentItem.CategoryId,
                    CustomUserId = _userManager.GetUserId(_httpContextAccessor.HttpContext.User),
                    ImageData = CurrentItem.ImageData,
                    ContentType = CurrentItem.ContentType,
                    Slug = CurrentItem.Slug
                };
                _context.Add(newCart);
                _context.SaveChanges();
            }
        }
        else
        {
            if (quantity <= 0)
            {
                quantity = 1;
            }
            var Item = _context.Cart
                    .Include(i => i.Category)
                    .Include(i => i.CustomUser)
                    .Include(i => i.Item)
                    .FirstOrDefault(m => m.ItemId == CurrentItem.Id);

            Item.Quantity += quantity;
            _context.Update(Item);
            _context.SaveChanges();
        }

        GetCart();

        await JSRuntime.InvokeAsync<string>("AddToCartSuccess", null);
    }

    public void GetCart()
    {
        CartItem = _context.Cart.Where(i => i.CustomUserId == _userManager.GetUserId(_httpContextAccessor.HttpContext.User) && !i.IsSold).ToList();
    }

    public async Task RemoveFromCart(int id)
    {
        var item = await _context.Cart.FindAsync(id);
        _context.Cart.Remove(item);
        await _context.SaveChangesAsync();
        GetCart();
    }

    public async Task AddToCartMoreItem(int id)
    {
        var currentItem = _context.Item.FirstOrDefault(i => i.Id == id);

        var number_of_some_item = (_context.Cart
            .Where(i => i.CustomUserId == _userManager.GetUserId(_httpContextAccessor.HttpContext.User) && !i.IsSold && i.ItemId == currentItem.Id).ToList()).Count;

        if (number_of_some_item == 0)
        {
            Models.Cart newCart = new Models.Cart
            {
                Name = currentItem.Name,
                ItemId = currentItem.Id,
                Quantity = 1,
                Price = currentItem.ListPrice(_context, currentItem.Price, currentItem.ItemSaleOffId),
                CategoryId = currentItem.CategoryId,
                CustomUserId = _userManager.GetUserId(_httpContextAccessor.HttpContext.User),
                ImageData = currentItem.ImageData,
                ContentType = currentItem.ContentType,
                Slug = currentItem.Slug
            };
            _context.Add(newCart);
            _context.SaveChanges();
        }
        else
        {
            var Item = await _context.Cart
                    .Include(i => i.Category)
                    .Include(i => i.CustomUser)
                    .Include(i => i.Item)
                    .FirstOrDefaultAsync(m => m.ItemId == currentItem.Id);

            Item.Quantity += 1;
            _context.Update(Item);
            _context.SaveChanges();
        }

        GetCart();

        await JSRuntime.InvokeAsync<string>("AddToCartSuccess", null);

    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<string>("sliderFunctions.startSlider", null);
        await JSRuntime.InvokeAsync<string>("mobileFunction.startFunction", null);
        //await JSRuntime.InvokeAsync<string>("scollToTop", null);
    }

    public async Task AddComment()
    {
        var userId = _userManager.GetUserId(_httpContextAccessor.HttpContext.User);
        var rateid_from_database = _context.Rate.FirstOrDefault(r => r.Value == RateValue).Id;
        ProductCommentToDataBase.RateId = rateid_from_database;
        ProductCommentToDataBase.ItemId = CurrentItem.Id;
        ProductCommentToDataBase.CustomUserId = userId;
        ProductCommentToDataBase.Date = DateTime.Now;
        _context.Add(ProductCommentToDataBase);
        _context.SaveChanges();



        var item = _context.Item.Include(i => i.Comments).Include(i => i.Rates).Include(i => i.Attachments).FirstOrDefault(i => i.Id == ProductCommentToDataBase.ItemId);
        var rateValue = ((_context.Comment.Where(i => i.ItemId == ProductCommentToDataBase.ItemId).Include(i => i.Rate).Include(i => i.Item).Select(i => i.Rate).Select(i => i.Value).ToList().Sum(x => Convert.ToDouble(x)) + 5) / Convert.ToDouble(item.Comments.Count + 1));
        item.RateValue = rateValue;
        await _canUserComment.RemoveUserFromItemAsync(userId, ProductCommentToDataBase.ItemId);
        _context.Update(item);
        _context.SaveChanges();

        CurrentItem = _context.Item.Include(i => i.Category).Include(i => i.Attachments).Include(i => i.Comments).Include(i => i.CustomUsers).FirstOrDefault(i => i.Slug == slug);
        ProductCommentToDataBase = new();
        await JSRuntime.InvokeVoidAsync("AddingReview", null);
    }

    public void SetRateValue1()
    {
        RateValue = 1;
    }
    public void SetRateValue2()
    {
        RateValue = 2;
    }
    public void SetRateValue3()
    {
        RateValue = 3;
    }
    public void SetRateValue4()
    {
        RateValue = 4;
    }
    public void SetRateValue5()
    {
        RateValue = 5;
    }

    public void OpenSearch()
    {
        if (searchActive is null)
        {
            searchActive = "active";
        }
        else
        {
            searchActive = null;
        }
    }


    public void PlusOne()
    {
        quantity += 1;
    }

    public void MinusOne()
    {
        if (quantity - 1 > 0)
        {
            quantity -= 1;
        }
    }


    public async Task AddToWishList(int id)
    {


        var number_of_some_item = (_context.WishList
            .Where(i => i.CustomUserId == _userManager.GetUserId(_httpContextAccessor.HttpContext.User) && i.ItemId == id).ToList()).Count;

        if (number_of_some_item == 0)
        {
            var currentItem = _context.Item.FirstOrDefault(i => i.Id == id);

            Models.WishList newWishList = new Models.WishList
            {
                Name = currentItem.Name,
                ItemId = currentItem.Id,
                Description = currentItem.Description,
                ListPrice = currentItem.ListPrice(_context, currentItem.Price, currentItem.ItemSaleOffId),
                CategoryId = currentItem.CategoryId,
                CustomUserId = _userManager.GetUserId(_httpContextAccessor.HttpContext.User),
                ImageData = currentItem.ImageData,
                ContentType = currentItem.ContentType,
                Slug = currentItem.Slug
            };
            _context.Add(newWishList);
            _context.SaveChanges();
        }


        await JSRuntime.InvokeAsync<string>("AddItemToWishList", null);

    }

} 